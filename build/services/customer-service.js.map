{"version":3,"sources":["../../src/services/customer-service.js"],"names":["INVALID_CUSTOMER_ID","CustomerService","constructor","repository","CustomerRepository","getCustomers","customers","getAllCustomers","getCustomerById","id","Error","filteredCustomer","getCustomer"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,mBAAmB,GAAG,gCAA5B;;AAEA,MAAMC,eAAN,CAAsB;AAClBC,EAAAA,WAAW,GAAG;AACV,SAAKC,UAAL,GAAkB,IAAIC,gCAAJ,EAAlB;AACH;;AAED,QAAMC,YAAN,GAAqB;AACjB,QAAIC,SAAS,GAAG,MAAM,KAAKH,UAAL,CAAgBI,eAAhB,EAAtB;AAEA,WAAOD,SAAP;AACH;;AAED,QAAME,eAAN,CAAsBC,EAAtB,EAA0B;AACtB,QAAG,CAACA,EAAJ,EAAQ;AACJ,YAAM,IAAIC,KAAJ,CAAUV,mBAAV,CAAN;AACH;;AAED,QAAIW,gBAAgB,GAAG,MAAM,KAAKR,UAAL,CAAgBS,WAAhB,CAA4BH,EAA5B,CAA7B;AAEA,WAAOE,gBAAP;AACH;;AAnBiB;;QAuBlBV,e,GAAAA,e","sourcesContent":["import { CustomerRepository } from \"../repositories\";\r\n\r\nconst INVALID_CUSTOMER_ID = 'Invalid Customer Id Specified!';\r\n\r\nclass CustomerService {\r\n    constructor() {\r\n        this.repository = new CustomerRepository();\r\n    }\r\n\r\n    async getCustomers() {\r\n        let customers = await this.repository.getAllCustomers();\r\n\r\n        return customers;\r\n    }\r\n    \r\n    async getCustomerById(id) {\r\n        if(!id) {\r\n            throw new Error(INVALID_CUSTOMER_ID);\r\n        }\r\n\r\n        let filteredCustomer = await this.repository.getCustomer(id);\r\n\r\n        return filteredCustomer;\r\n    }\r\n}\r\n\r\nexport {\r\n    CustomerService\r\n};\r\n"],"file":"customer-service.js"}