{"version":3,"sources":["../src/test-index.js"],"names":["MainClass","testMain1","startDate","Date","statement","result","DbManager","executeQuery","records","recordset","forEach","element","__proto__","Customer","endTime","console","info","log","error","testMain2","service","CustomerService","customers","getCustomers","dir","filteredCustomer","getCustomerById","then","process","exit"],"mappings":";;AAAA;;AACA;;AACA;;AAEA,MAAMA,SAAN,CAAgB;AACZ,eAAaC,SAAb,GAAyB;AACrB,QAAI;AACA,YAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,YAAMC,SAAS,GAAG,yBAAlB;AACA,YAAMC,MAAM,GAAG,MAAMC,wBAAUC,YAAV,CAAuBH,SAAvB,CAArB;AACA,YAAMI,OAAO,GAAGH,MAAM,CAACI,SAAvB;AAEAD,MAAAA,OAAO,CAACE,OAAR,CAAgBC,OAAO,IAAI;AACvBA,QAAAA,OAAO,CAACC,SAAR,GAAoB,IAAIC,gBAAJ,EAApB;AACH,OAFD;AAIA,YAAMC,OAAO,GAAG,IAAIX,IAAJ,KAAaD,SAA7B;AAEAa,MAAAA,OAAO,CAACC,IAAR,CAAa,sBAAb,EAAqCF,OAArC;AACAC,MAAAA,OAAO,CAACE,GAAR,CAAYT,OAAO,CAAC,CAAD,CAAP,YAAsBK,gBAAlC;AACH,KAdD,CAcE,OAAOK,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH;AACJ;;AAED,eAAaC,SAAb,GAAyB;AACrB,UAAMC,OAAO,GAAG,IAAIC,gCAAJ,EAAhB;AAEA,UAAMC,SAAS,GAAG,MAAMF,OAAO,CAACG,YAAR,EAAxB;AACAR,IAAAA,OAAO,CAACS,GAAR,CAAYF,SAAZ;AAEAP,IAAAA,OAAO,CAACE,GAAR,CAAY,mCAAZ;AAEA,UAAMQ,gBAAgB,GAAG,MAAML,OAAO,CAACM,eAAR,CAAwB,EAAxB,CAA/B;AACAX,IAAAA,OAAO,CAACS,GAAR,CAAYC,gBAAZ;AACAV,IAAAA,OAAO,CAACE,GAAR,CAAYQ,gBAAgB,YAAYZ,gBAAxC;AACH;;AAhCW;;AAmChBb,SAAS,CAACmB,SAAV,GACKQ,IADL,CACU,MAAM;AACRZ,EAAAA,OAAO,CAACC,IAAR,CAAa,OAAb;AACAY,EAAAA,OAAO,CAACC,IAAR;AACH,CAJL","sourcesContent":["import { Customer } from \"./models\";\r\nimport { DbManager } from \"./db-management\";\r\nimport { CustomerService } from \"./services/customer-service\";\r\n\r\nclass MainClass {\r\n    static async testMain1() {\r\n        try {\r\n            const startDate = new Date();\r\n            const statement = \"SELECT * FROM Customers\";\r\n            const result = await DbManager.executeQuery(statement);\r\n            const records = result.recordset;\r\n\r\n            records.forEach(element => {\r\n                element.__proto__ = new Customer();\r\n            });\r\n\r\n            const endTime = new Date() - startDate;\r\n\r\n            console.info('Totally it took %dms', endTime);\r\n            console.log(records[0] instanceof Customer);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    static async testMain2() {\r\n        const service = new CustomerService();\r\n\r\n        const customers = await service.getCustomers();\r\n        console.dir(customers);\r\n\r\n        console.log('.................................');\r\n\r\n        const filteredCustomer = await service.getCustomerById(10);\r\n        console.dir(filteredCustomer);\r\n        console.log(filteredCustomer instanceof Customer);\r\n    }\r\n}\r\n\r\nMainClass.testMain2()\r\n    .then(() => {\r\n        console.info('Done!');\r\n        process.exit();\r\n    });\r\n"],"file":"test-index.js"}